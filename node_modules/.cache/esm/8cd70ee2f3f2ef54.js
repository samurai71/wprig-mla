/* eslint-env es6 */
'use strict';;let fs,path,mkdirp,filesToMock;_f3f‍.w("fs",[["default",["fs"],function(v){fs=v}]]);_f3f‍.w("path",[["default",["path"],function(v){path=v}]]);_f3f‍.w("mkdirp",[["default",["mkdirp"],function(v){mkdirp=v}]]);_f3f‍.w("./prod-build.utils",[["filesToMock",["filesToMock"],function(v){filesToMock=v}]]);

/**
 * External dependencies
 */




/**
 * Internal dependencies
 */


// Copy the mock files to their destination before testing.
filesToMock.forEach( ( file ) => {
	// Check if the file already exists
	const fileExists = fs.existsSync( file.dest );
	if ( fileExists ) {
		// If it does, rename the file adding an -existing suffix
		const existingFile = file.dest.replace( /(\.[\w-]+)$/i, '-existing$1' );
		fs.renameSync( file.dest, existingFile );
	}

	// Copy the mock file to the desired location
	const filePath = path.dirname( file.dest );
	mkdirp( filePath );
	fs.copyFileSync( file.mock, file.dest );
} );
